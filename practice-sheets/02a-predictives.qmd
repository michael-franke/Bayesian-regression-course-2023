---
title: "Bayesian regression: theory & practice"
subtitle: "02: Simple linear regression & categorical predictors"
author: "Michael Franke & Timo Roettger"
format: html
editor: visual
execute:
  error: false
  warning: false
  message: false
callout-appearance: simple
---

{{< include 00-preamble.qmd >}}

```{r}
dolphin <- aida::data_MT
```

# Priors in `brms` models

Here is the aggregate data and a simple linear regression model we looked at before:

```{r}
#| output: false 

# create aggregate data
dolphin_agg <- dolphin |> 
  filter(correct == 1) |> 
  group_by(subject_id) |> 
  dplyr::summarize(
            AUC = median(AUC, na.rm = TRUE),
            MAD = median(MAD, na.rm = TRUE)) 

# run the model
model1 = brm(
  AUC ~ MAD, 
  data = dolphin_agg)
```

We can inspect the priors used in in a model fit like so:

```{r}
brms::prior_summary(model1)
```

This tells us that the priors for the slope coefficient for the variable `MAD` was "flat".
Per default, `brms` uses so-called improper priors, i.e., not specifying any prior at all, so that every parameter value is equally weighted (even if this is not a proper probability distribution).

In contrast, `brms` /does/ use more specific, in fact rather smart, priors for the intercept and for the standard deviation.
These priors are informed by the data. Look:

```{r}
dolphin_agg |> pull(AUC) |> median()
dolphin_agg |> pull(AUC) |> var()
```




# Prior and posterior predictives

Here is an example for how we can obtain draws from the posterior predictive distribution using `tidybayes::predicted_draws`. We are using the fit of a linear model to the average world temperature for the year 2025 to 2024.

```{r}

plot_predictPriPost <- function(prior_spec, ndraws = 1000) {
  
  # get the posterior fit
  fit <- brm(
    avg_temp ~ year,
    prior = prior_spec,
    data = aida::data_WorldTemp,
    silent = TRUE,
    refresh = 0
  )
  
  # retrieve prior samples from the posterior fit
  fit_prior_only <- update(
    fit,
    silent = TRUE,
    refresh = 0,
    sample_prior = "only"
  )
  
  get_predictions <- function(fit_object, type = "prior prediction") {
    
    tidybayes::add_linpred_draws(
      fit_object, 
      newdata = tibble(year = aida::data_WorldTemp$year),
      ndraws = ndraws,
      value = 'avg_tmp'
    ) |> 
      ungroup() |> 
      select(year, .draw, avg_tmp) |> 
      mutate(type = type)
    
  }
  
  get_predictions(fit, "posterior prediction") |> 
    rbind(get_predictions(fit_prior_only, "prior prediction")) |> 
    mutate(type = factor(type, levels = c("prior prediction", "posterior prediction"))) |> 
    ggplot() + 
    facet_grid(type ~ ., scales = "free") +
    geom_line(aes(x = year, y = avg_tmp, group = .draw), 
              color = "gray", alpha = 0.3) +
    geom_point(data = aida::data_WorldTemp, 
               aes(x = year, y = avg_temp), color = project_colors[2], size = 1, alpha = 0.8) +
    ylab("average temperature")
}

prior_baseline <- c(prior("normal(0, 0.02)", class = "b"),
                    prior("student_t(3, 8, 5)", class = "Intercept"))

prior_opinionated <- c(prior("normal(0.2, 0.05)", class = "b"),
                       prior("student_t(3, 8, 5)", class = "Intercept"))

prior_crazy <- c(prior("normal(-1, 0.005)", class = "b"),
                 prior("student_t(3, 8, 5)", class = "Intercept"))

plot_predictPriPost(prior_baseline)
# ggsave("pics/02a-predictives-baseline.pdf", width = 5, height = 8)

plot_predictPriPost(prior_opinionated)
# ggsave("pics/02b-predictives-opinionated.pdf", width = 5, height = 8)

plot_predictPriPost(prior_crazy)
# ggsave("pics/02c-predictives-crazy.pdf", width = 5, height = 8)

```

::: callout-caution
**Exercise 0**

Play around with different prior specifications, and inspect the resulting prior and posterior predictions.
:::

